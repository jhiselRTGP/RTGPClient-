.full-overlay {
  position: fixed;
  /* Instead of top: 0; left: 0 for a typical overlay,
     we still want it to cover the entire screen's background
     so user sees a dim behind it. */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  /* Dark background behind the sheet */
  background-color: rgba(0, 0, 0, 0.6);

  /* Start hidden off-screen by default */
  display: none;
  opacity: 0;
  pointer-events: none;

  /* The main trick: We'll animate a child .sheet-container
     from bottom to top, rather than centering it. */
  transition: opacity 0.3s;
  z-index: 999;
}

.full-overlay.open {
  display: block;
  opacity: 1;
  pointer-events: auto;
}

/* The container that slides up from the bottom */
.sheet-container {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  /* Full page or partial: choose height 100%, 80%, etc. */
  height: 100%;
  background-color: #2a2a2a;
  border-radius: 16px 16px 0 0; /* Rounded corners on top */
  transform: translateY(100%);  /* start off-screen below the bottom */
  transition: transform 0.3s;
}
.light-mode .sheet-container {
  background-color: #fff;
  color: #111;
}

/* When the overlay is open, we also want the sheet to slide up */
.full-overlay.open .sheet-container {
  transform: translateY(0);
}

/* Inside the sheet content, you can have the close button,
   a heading, chat area, etc. */
.sheet-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
}
.sheet-header h2 {
  margin: 0;
}
.close-sheet {
  background: none;
  border: none;
  font-size: 1.4rem;
  cursor: pointer;
  color: inherit;
}

/* The rest of the content can scroll if needed */
.sheet-body {
  flex: 1;
  overflow-y: auto;
  padding: 1rem;
}

/* If you want a chat area pinned at the bottom inside the sheet,
   you can place it in another fixed or absolute block. 
   Or just let it scroll. Example: */
.sheet-chat {
  border-top: 1px solid #444;
  padding: 1rem;
}